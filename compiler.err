In file included from ./include/LICHEM_headers.h:22:0,
                 from ./src/LICHEM.cpp:22:
./include/LICHEM_clibs.h:24:38: note: #pragma message: OpenMP is enabled.
  #pragma message("OpenMP is enabled.")
                                      ^
In file included from ./include/LICHEM_headers.h:22:0,
                 from ./src/LICHEM.cpp:22:
./include/LICHEM_clibs.h:34:40: note: #pragma message: OpenACC is disabled.
  #pragma message("OpenACC is disabled.")
                                        ^
In file included from ./include/LICHEM_QSM.h:122:0,
                 from ./include/LICHEM_headers.h:247,
                 from ./src/LICHEM.cpp:22:
./src/QSM_tools.cpp: In function ‘void spaceoutcubic(Eigen::VectorXd&, bool*, int, int, Eigen::VectorXd&)’:
./src/QSM_tools.cpp:155:8: warning: unused variable ‘natm’ [-Wunused-variable]
    int natm=Ndim/3;
        ^~~~
./src/QSM_tools.cpp:164:8: warning: unused variable ‘crd’ [-Wunused-variable]
    int crd;
        ^~~
./src/QSM_tools.cpp:165:8: warning: variable ‘index’ set but not used [-Wunused-but-set-variable]
    int index;
        ^~~~~
In file included from ./include/LICHEM_QSM.h:123:0,
                 from ./include/LICHEM_headers.h:247,
                 from ./src/LICHEM.cpp:22:
./src/Optimization_tools.cpp: In function ‘double CalcForces(std::vector<QMMMAtom>&, QMMMSettings&, Eigen::VectorXd&, Eigen::VectorXd&, Eigen::VectorXd&, Eigen::VectorXd&, int, int, bool, std::fstream&)’:
./src/Optimization_tools.cpp:83:16: warning: unused variable ‘tempFx’ [-Wunused-variable]
         double tempFx=0.0;
                ^~~~~~
./src/Optimization_tools.cpp:84:16: warning: unused variable ‘tempFy’ [-Wunused-variable]
         double tempFy=0.0;
                ^~~~~~
./src/Optimization_tools.cpp:85:16: warning: unused variable ‘tempFz’ [-Wunused-variable]
         double tempFz=0.0;
                ^~~~~~
./src/Optimization_tools.cpp:53:14: warning: unused variable ‘relAU’ [-Wunused-variable]
       double relAU = 0.0;
              ^~~~~
./src/Optimization_tools.cpp:54:14: warning: unused variable ‘relkcal’ [-Wunused-variable]
       double relkcal = 0.0;
              ^~~~~~~
./src/Optimization_tools.cpp:74:11: warning: unused variable ‘NewTS’ [-Wunused-variable]
       int NewTS = 0; //Storage for new TS ID
           ^~~~~
./src/Optimization_tools.cpp:75:14: warning: unused variable ‘NewTSEnergy’ [-Wunused-variable]
       double NewTSEnergy = -1*hugeNum;
              ^~~~~~~~~~~
./src/Optimization_tools.cpp:186:1: warning: no return statement in function returning non-void [-Wreturn-type]
 }
 ^
./src/Optimization_tools.cpp: In function ‘double CalcEnergy(std::vector<QMMMAtom>&, QMMMSettings&, Eigen::VectorXd&, Eigen::VectorXd&, Eigen::VectorXd&, std::fstream&)’:
./src/Optimization_tools.cpp:194:24: warning: unused variable ‘SumEau’ [-Wunused-variable]
     double SumE,SumEeV,SumEau, Eqm, Emm;
                        ^~~~~~
./src/Optimization_tools.cpp:309:1: warning: no return statement in function returning non-void [-Wreturn-type]
 }
 ^
./src/Optimization_tools.cpp: In function ‘double runMMopt(std::vector<QMMMAtom>&, QMMMSettings&, std::fstream&)’:
./src/Optimization_tools.cpp:313:15: warning: variable ‘SumE’ set but not used [-Wunused-but-set-variable]
        double SumE,SumEeV;
               ^~~~
./src/Optimization_tools.cpp: In function ‘double runRestrMMopt(std::vector<QMMMAtom>&, QMMMSettings&, double, std::fstream&)’:
./src/Optimization_tools.cpp:389:15: warning: variable ‘SumE’ set but not used [-Wunused-but-set-variable]
        double SumE=0.0;
               ^~~~
./src/Optimization_tools.cpp: In function ‘bool QSMConverged(std::vector<QMMMAtom>&, std::vector<QMMMAtom>&, int, QMMMSettings&, Eigen::VectorXd&, std::fstream&)’:
./src/Optimization_tools.cpp:850:10: warning: unused variable ‘RMSforce’ [-Wunused-variable]
   double RMSforce = 0;
          ^~~~~~~~
./src/Optimization_tools.cpp:851:10: warning: unused variable ‘MAXforce’ [-Wunused-variable]
   double MAXforce = 0;
          ^~~~~~~~
./src/Optimization_tools.cpp:855:7: warning: unused variable ‘Ndof’ [-Wunused-variable]
   int Ndof = 3*(Nqm+Npseudo); //Number of QM and PB degrees of freedom
       ^~~~
./src/Optimization_tools.cpp: In function ‘bool QMConverged(std::vector<QMMMAtom>&, std::vector<QMMMAtom>&, Eigen::MatrixXd&, int, QMMMSettings&, double&, double&, double&)’:
./src/Optimization_tools.cpp:995:10: warning: unused variable ‘SumE’ [-Wunused-variable]
   double SumE = 0;
          ^~~~
In file included from ./include/LICHEM_QSM.h:124:0,
                 from ./include/LICHEM_headers.h:247,
                 from ./src/LICHEM.cpp:22:
./src/Utilities.cpp: In function ‘void getTSbead(QMMMSettings&, Eigen::VectorXd&)’:
./src/Utilities.cpp:311:12: warning: unused variable ‘Ecomplex’ [-Wunused-variable]
     double Ecomplex=0.0; /* update this value so that everyone has it*/
            ^~~~~~~~
In file included from ./include/LICHEM_headers.h:259:0,
                 from ./src/LICHEM.cpp:22:
./src/Multipoles.cpp: In function ‘void ExtractTINKpoles(std::vector<QMMMAtom>&, int, std::fstream&)’:
./src/Multipoles.cpp:33:20: warning: unused variable ‘Idipy’ [-Wunused-variable]
  int atomNum,IDipx,Idipy,IDipz;
                    ^~~~~
./src/Multipoles.cpp:33:26: warning: unused variable ‘IDipz’ [-Wunused-variable]
  int atomNum,IDipx,Idipy,IDipz;
                          ^~~~~
In file included from ./include/LICHEM_headers.h:262:0,
                 from ./src/LICHEM.cpp:22:
./src/Reaction_path.cpp: In function ‘bool PathConverged(std::vector<QMMMAtom>&, std::vector<QMMMAtom>&, Eigen::MatrixXd&, int, QMMMSettings&, bool, std::fstream&)’:
./src/Reaction_path.cpp:127:10: warning: unused variable ‘maxFtol’ [-Wunused-variable]
   double maxFtol = QMMMOpts.QMMaxForceTol;
          ^~~~~~~
./src/Reaction_path.cpp:128:10: warning: unused variable ‘RMSFTol’ [-Wunused-variable]
   double RMSFTol = QMMMOpts.QMRMSForceTol;
          ^~~~~~~
./src/Reaction_path.cpp: In function ‘void LICHEMQSM(std::vector<QMMMAtom>&, QMMMSettings&, Eigen::VectorXd&, int, int, bool&, Eigen::VectorXd&, double, Eigen::VectorXd&, int, std::fstream&)’:
./src/Reaction_path.cpp:1673:7: warning: unused variable ‘stepct’ [-Wunused-variable]
   int stepct = 0; //Counter for optimization steps
       ^~~~~~
./src/Reaction_path.cpp:1680:7: warning: variable ‘PathStart’ set but not used [-Wunused-but-set-variable]
   int PathStart = 0;
       ^~~~~~~~~
./src/Reaction_path.cpp:1681:7: warning: variable ‘PathEnd’ set but not used [-Wunused-but-set-variable]
   int PathEnd = QMMMOpts.NBeads;
       ^~~~~~~
./src/Reaction_path.cpp:1689:10: warning: unused variable ‘Eold’ [-Wunused-variable]
   double Eold = 0; //Previous total energy
          ^~~~
./src/Reaction_path.cpp:1690:10: warning: unused variable ‘SumE’ [-Wunused-variable]
   double SumE = 0; //Current total energy
          ^~~~
./src/Reaction_path.cpp:1703:7: warning: unused variable ‘counter’ [-Wunused-variable]
   int counter=0;
       ^~~~~~~
In file included from ./include/LICHEM_headers.h:273:0,
                 from ./src/LICHEM.cpp:22:
./src/TINKER.cpp: In function ‘double TINKEREnergy(std::vector<QMMMAtom>&, QMMMSettings&, int, std::fstream&)’:
./src/TINKER.cpp:1648:10: warning: variable ‘tempE’ set but not used [-Wunused-but-set-variable]
   double tempE;
          ^~~~~
./src/LICHEM.cpp: In function ‘int main(int, char**)’:
./src/LICHEM.cpp:1716:38: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
                if(QMMMOpts.KeepFiles and
                   ~~~~~~~~~~~~~~~~~~~^~~
                   ((iter%QMMMOpts.perOpt)==0) or
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
./src/LICHEM.cpp:1505:9: warning: unused variable ‘counter’ [-Wunused-variable]
     int counter; //Reset counter for the number of atoms
         ^~~~~~~
./src/LICHEM.cpp:1506:12: warning: unused variable ‘gradqsm’ [-Wunused-variable]
     double gradqsm;
            ^~~~~~~
./src/LICHEM.cpp:1507:10: warning: unused variable ‘dostep’ [-Wunused-variable]
     bool dostep=true;
          ^~~~~~
./src/LICHEM.cpp:1512:9: warning: unused variable ‘optct’ [-Wunused-variable]
     int optct = 0; //Counter for optimization steps
         ^~~~~
./src/LICHEM.cpp:1521:9: warning: unused variable ‘PathStart’ [-Wunused-variable]
     int PathStart = 1;
         ^~~~~~~~~
./src/LICHEM.cpp:1522:9: warning: unused variable ‘PathEnd’ [-Wunused-variable]
     int PathEnd = QMMMOpts.NBeads-1;
         ^~~~~~~
./src/LICHEM.cpp:40:7: warning: unused variable ‘randNum’ [-Wunused-variable]
   int randNum; //Random integer
       ^~~~~~~
./src/LICHEM.cpp:1964:7: warning: unused variable ‘retValue’ [-Wunused-variable]
   int retValue; //= globalSys;
       ^~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:294:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Matrix<double, -1, -1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Matrix<double, -1, -1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Matrix<double, -1, -1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/QSM_tools.cpp:509:55:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Matrix<double, -1, -1>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Matrix<double, -1, -1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Matrix<double, -1, -1>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Matrix<double, -1, -1>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
./src/Optimization_tools.cpp:767:70:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
./src/Utilities.cpp:90:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
./src/Analysis.cpp:821:16:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
./src/Multipoles.cpp:260:17:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:163:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Matrix<double, 3, 1>]’
./src/Multipoles.cpp:263:37:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
./src/Multipoles.cpp:372:22:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::mul_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
./src/Multipoles.cpp:1375:20:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::Matrix<double, 3, 3>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::Matrix<double, 3, 3>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./src/Multipoles.cpp:1381:46:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:163:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
./src/Optimizers.cpp:521:17:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
./src/Reaction_path.cpp:80:18:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:163:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./src/Reaction_path.cpp:687:28:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./src/Reaction_path.cpp:698:53:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::mul_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, -1>; Eigen::DenseBase<Derived>::Scalar = double]’
./src/TINKER.cpp:1917:44:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, -1, -1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::Matrix<double, -1, -1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Matrix<double, -1, -1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Matrix<double, -1, -1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]’
./src/QSM_tools.cpp:69:43:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
./src/QSM_tools.cpp:200:47:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
./src/QSM_tools.cpp:238:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:531:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:294:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
./src/QSM_tools.cpp:328:21:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:531:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/QSM_tools.cpp:509:55:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]’
./src/QSM_tools.cpp:551:16:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
./src/QSM_tools.cpp:818:62:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, -1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, -1, -1> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<std::complex<double>, -1, -1>; SrcXprType = Eigen::Matrix<std::complex<double>, -1, -1>; Functor = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<std::complex<double>, -1, -1>; SrcXprType = Eigen::Matrix<std::complex<double>, -1, -1>; Functor = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<std::complex<double>, -1, -1>; Src = Eigen::Matrix<std::complex<double>, -1, -1>; Func = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<std::complex<double>, -1, -1>; Derived = Eigen::Matrix<std::complex<double>, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = std::complex<double>; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:373:10:   required from ‘Eigen::EigenSolver<_MatrixType>::EigenvectorsType Eigen::EigenSolver<_MatrixType>::eigenvectors() const [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::EigenSolver<_MatrixType>::EigenvectorsType = Eigen::Matrix<std::complex<double>, -1, -1>; typename Eigen::NumTraits<typename Derived::Scalar>::Real = double]’
./src/Analysis.cpp:721:45:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Core/Dot.h:144:15:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, 3, 1>]’
./src/Multipoles.cpp:248:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
./Eigen3/Eigen/src/Geometry/OrthoMethods.h:47:3:   required from ‘typename Eigen::MatrixBase<Derived>::cross_product_return_type<OtherDerived>::type Eigen::MatrixBase<Derived>::cross(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>; typename Eigen::MatrixBase<Derived>::cross_product_return_type<OtherDerived>::type = Eigen::Matrix<double, 3, 1>]’
./src/Multipoles.cpp:415:29:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, 3, 3> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<std::complex<double>, 3, 3> >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<std::complex<double>, 3, 3>; SrcXprType = Eigen::Matrix<std::complex<double>, 3, 3>; Functor = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<std::complex<double>, 3, 3>; SrcXprType = Eigen::Matrix<std::complex<double>, 3, 3>; Functor = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<std::complex<double>, 3, 3>; Src = Eigen::Matrix<std::complex<double>, 3, 3>; Func = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<std::complex<double>, 3, 3>; Derived = Eigen::Matrix<std::complex<double>, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = std::complex<double>; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:373:10:   required from ‘Eigen::EigenSolver<_MatrixType>::EigenvectorsType Eigen::EigenSolver<_MatrixType>::eigenvectors() const [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::EigenSolver<_MatrixType>::EigenvectorsType = Eigen::Matrix<std::complex<double>, 3, 3>; typename Eigen::NumTraits<typename Derived::Scalar>::Real = double]’
./src/Multipoles.cpp:1381:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:531:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./src/Multipoles.cpp:1381:46:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
./src/Reaction_path.cpp:1905:83:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:107:59:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/QSM_tools.cpp:109:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/QSM_tools.cpp:113:28:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/QSM_tools.cpp:114:33:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>, const Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:131:58:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:168:35:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:174:36:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:413:31:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:549:17:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:553:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:554:19:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:569:44:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:585:70:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:602:54:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:619:137:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:637:54:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> > > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:644:26:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:694:33:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/QSM_tools.cpp:734:42:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:775:38:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:851:38:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:858:68:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/QSM_tools.cpp:1074:42:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::mul_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::mul_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::DenseBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:746:39:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::swap_assign_op<double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::swap_assign_op<double>, 1>’
./Eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::swap_assign_op<double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Functor = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Func = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/DenseBase.h:418:22:   required from ‘void Eigen::DenseBase<Derived>::swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:775:22:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:769:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:611:64:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::DenseBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:525:40:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::div_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::DenseBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:598:45:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/Analysis.cpp:720:47:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> > >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Func = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Func = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Derived = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:357:19:   required from ‘Eigen::EigenSolver<_MatrixType>::EigenvectorsType Eigen::EigenSolver<_MatrixType>::eigenvectors() const [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::EigenSolver<_MatrixType>::EigenvectorsType = Eigen::Matrix<std::complex<double>, -1, -1>; typename Eigen::NumTraits<typename Derived::Scalar>::Real = double]’
./src/Analysis.cpp:721:45:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1> > >, Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> > >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1> > >, Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1> >; Functor = Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1> >; Functor = Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1> >; Func = Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, 1> >; Func = Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>; Eigen::DenseBase<Derived>::Scalar = std::complex<double>]’
./Eigen3/Eigen/src/Core/Dot.h:144:15:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Block<Eigen::Matrix<std::complex<double>, -1, -1>, -1, 1, true>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:358:7:   required from ‘Eigen::EigenSolver<_MatrixType>::EigenvectorsType Eigen::EigenSolver<_MatrixType>::eigenvectors() const [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::EigenSolver<_MatrixType>::EigenvectorsType = Eigen::Matrix<std::complex<double>, -1, -1>; typename Eigen::NumTraits<typename Derived::Scalar>::Real = double]’
./src/Analysis.cpp:721:45:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryView<Eigen::internal::scalar_real_ref_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:721:52:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Eigen::DenseBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:525:40:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> > >, Eigen::internal::div_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> > >, Eigen::internal::div_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Functor = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Func = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::DenseBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:598:45:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_real_op<std::complex<double> >, const Eigen::Matrix<std::complex<double>, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
./src/Multipoles.cpp:1379:41:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true> > >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> > >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true> > >, Eigen::internal::assign_op<std::complex<double>, std::complex<double> >, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true> >; Functor = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true> >; Functor = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true> >; Func = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true> >; Func = Eigen::internal::assign_op<std::complex<double>, std::complex<double> >; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true> >]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, std::complex<double> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true> >; Derived = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:357:19:   required from ‘Eigen::EigenSolver<_MatrixType>::EigenvectorsType Eigen::EigenSolver<_MatrixType>::eigenvectors() const [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::EigenSolver<_MatrixType>::EigenvectorsType = Eigen::Matrix<std::complex<double>, 3, 3>; typename Eigen::NumTraits<typename Derived::Scalar>::Real = double]’
./src/Multipoles.cpp:1381:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 1> > >, Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> > >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 1> > >, Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 1> >; Functor = Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 1> >; Functor = Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 1> >; Func = Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<std::complex<double> >, Eigen::Matrix<std::complex<double>, 3, 1> >; Func = Eigen::internal::div_assign_op<std::complex<double>, std::complex<double> >; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>; Eigen::DenseBase<Derived>::Scalar = std::complex<double>]’
./Eigen3/Eigen/src/Core/Dot.h:144:15:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Block<Eigen::Matrix<std::complex<double>, 3, 3>, 3, 1, true>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:358:7:   required from ‘Eigen::EigenSolver<_MatrixType>::EigenvectorsType Eigen::EigenSolver<_MatrixType>::eigenvectors() const [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::EigenSolver<_MatrixType>::EigenvectorsType = Eigen::Matrix<std::complex<double>, 3, 3>; typename Eigen::NumTraits<typename Derived::Scalar>::Real = double]’
./src/Multipoles.cpp:1381:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Optimizers.cpp:578:45:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./src/Reaction_path.cpp:1142:31:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_random_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_random_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_random_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_random_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_random_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_random_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_random_op<double>, Eigen::Matrix<double, -1, 1> >]’
./Eigen3/Eigen/src/Core/Assign.h:41:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_random_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Random.h:133:16:   required from ‘Derived& Eigen::DenseBase<Derived>::setRandom() [with Derived = Eigen::Matrix<double, -1, 1>]’
./src/Reaction_path.cpp:1512:29:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Reaction_path.cpp:1938:36:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:753:60:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double>, 1>’
./Eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::swap_assign_op<double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::swap_assign_op<double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/DenseBase.h:429:22:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:997:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 1>; MatrixTypeB = Eigen::Matrix<double, 3, 1>; bool SwapPointers = false]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:869:81:   required from ‘void Eigen::PlainObjectBase<Derived>::swap(Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:283:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
./src/Multipoles.cpp:415:29:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; SrcXprType = Eigen::Matrix<double, 3, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Src = Eigen::Matrix<double, 3, 1>]’
./Eigen3/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:616:20:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/CwiseNullaryOp.h:744:14:   required from ‘static Derived& Eigen::internal::setIdentity_impl<Derived, Big>::run(Derived&) [with Derived = Eigen::Matrix<double, -1, -1>; bool Big = false]’
./Eigen3/Eigen/src/Core/CwiseNullaryOp.h:773:50:   required from ‘Derived& Eigen::MatrixBase<Derived>::setIdentity() [with Derived = Eigen::Matrix<double, -1, -1>]’
./src/QSM_tools.cpp:62:34:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:685:18:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Matrix<double, 2, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Matrix<double, 2, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 2, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:509:24:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 3, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 0>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 0>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 0>; ExpressionType = Eigen::Matrix<double, 3, 1>; StorageBase = Eigen::MatrixBase]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:615:21:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, 1> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
./Eigen3/Eigen/src/Core/CwiseNullaryOp.h:744:14:   required from ‘static Derived& Eigen::internal::setIdentity_impl<Derived, Big>::run(Derived&) [with Derived = Eigen::Matrix<double, -1, 1>; bool Big = false]’
./Eigen3/Eigen/src/Core/CwiseNullaryOp.h:773:50:   required from ‘Derived& Eigen::MatrixBase<Derived>::setIdentity() [with Derived = Eigen::Matrix<double, -1, 1>]’
./src/LICHEM.cpp:929:21:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Assign.h:57:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
./Eigen3/Eigen/src/Core/MapBase.h:286:39:   required from ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
./Eigen3/Eigen/src/Core/Block.h:341:5:   required from ‘Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>& Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::operator=(const Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>&) [with XprType = Eigen::Matrix<double, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
./Eigen3/Eigen/src/Core/Block.h:161:5:   required from ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = Eigen::Matrix<double, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
./Eigen3/Eigen/src/Core/Block.h:111:5:   required from ‘Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>& Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::operator=(const Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>&) [with XprType = Eigen::Matrix<double, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
./src/QSM_tools.cpp:199:45:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:225:17:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:732:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<2, 8, 0, Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:792:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 10; bool SetOpposite = false; DstXprType = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:840:61:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Triangular>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:555:37:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/TriangularMatrix.h:397:55:   required from ‘Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::TriangularViewType& Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::setZero() [with _MatrixType = Eigen::Matrix<double, -1, -1>; unsigned int _Mode = 10; Eigen::TriangularViewImpl<_MatrixType, _Mode, Eigen::Dense>::TriangularViewType = Eigen::TriangularView<Eigen::Matrix<double, -1, -1>, 10>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:250:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::mul_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:157:11:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:164:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:165:18:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:127:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:258:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:128:18:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:258:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:531:19:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:597:67:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::mul_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:157:11:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, -1, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:164:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, -1, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:165:18:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, -1, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 2, 1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 2, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 2, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 2, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, 2, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 2, 1, false>; _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:509:24:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:443:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = double; LhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 0>; bool ConjugateLhs = false; RhsScalar = double; RhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 1>; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = double]’:
./Eigen3/Eigen/src/Core/GeneralProduct.h:257:132:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Dest = Eigen::Matrix<double, -1, 1>; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:367:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:349:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:337:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; ExpressionType = Eigen::Matrix<double, -1, 1>; StorageBase = Eigen::MatrixBase]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:615:21:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:186:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:187:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:154:16:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> > >, Eigen::internal::mul_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Func = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:120:11:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:313:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:127:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:313:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1, 1, 1, 3> >, const Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1, 1, 1, 3> >, const Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1, 1, 1, 3> >, const Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1, 1, 1, 3> >, const Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1, 1, 1, 3> >, const Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:128:18:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:313:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, -1, 0, 3, 3> > >, Eigen::internal::mul_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, -1, 0, 3, 3> > >, Eigen::internal::mul_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, -1, 0, 3, 3> >; Functor = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, -1, 0, 3, 3> >; Functor = Eigen::internal::mul_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, -1, 0, 3, 3> >; Func = Eigen::internal::mul_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:157:11:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:164:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:165:18:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true> >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true> >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true>; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true>; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:164:9:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:503:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:165:18:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:503:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, 2, 1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, 2, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, 2, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, 2, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::Block<Eigen::Matrix<double, 3, 3>, 2, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 2, 1, false>; _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:509:24:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Src = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Assign.h:57:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
./Eigen3/Eigen/src/Core/MapBase.h:286:39:   required from ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, -1, 1, false>]’
./Eigen3/Eigen/src/Core/Block.h:341:5:   required from ‘Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>& Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::operator=(const Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>&) [with XprType = Eigen::Matrix<double, -1, 1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false]’
./Eigen3/Eigen/src/Core/Block.h:161:5:   required from ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = Eigen::Matrix<double, -1, 1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false]’
./Eigen3/Eigen/src/Core/Block.h:111:5:   required from ‘Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>& Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::operator=(const Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>&) [with XprType = Eigen::Matrix<double, -1, 1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false]’
./Eigen3/Eigen/src/Core/VectorBlock.h:56:47:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:732:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<1, 0, 1, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:792:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 1; bool SetOpposite = true; DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:831:89:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 1>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false> >, 1>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:228:24:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:732:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<2, 0, 1, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::TriangularView<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:792:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 2; bool SetOpposite = true; DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::TriangularView<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:831:89:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Triangular2Dense>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::TriangularView<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::TriangularView<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::TriangularView<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:173:24:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 1, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:681:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 3, 1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 3, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 3, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 3, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, 3, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, 3, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, -1, -1>, 3, 1, false>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:488:9:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, false>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:488:9:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/CwiseNullaryOp.h:624:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setOnes() [with Derived = Eigen::Diagonal<Eigen::Matrix<double, -1, -1>, 0>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:249:9:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/CwiseNullaryOp.h:498:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:262:11:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; SrcXprType = Eigen::Matrix<double, 1, -1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; SrcXprType = Eigen::Matrix<double, 1, -1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Src = Eigen::Matrix<double, 1, -1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:769:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>, Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>, 2>, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:45:18:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholderInPlace(Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:305:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, -1, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/CwiseNullaryOp.h:330:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:441:7:   required from ‘void Eigen::RealSchur<_MatrixType>::computeShift(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Scalar&, Eigen::RealSchur<_MatrixType>::Vector3s&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Scalar = double; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:319:21:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 3, 1>, 2, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 3, 1>, 2, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 3, 1>, 2, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 3, 1>, 2, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 3, 1>, 2, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 3, 1>, 2, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:91:15:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholder(EssentialPart&, Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) const [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 3, 1>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:492:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:502:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 2, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:502:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>; Rhs = Eigen::Matrix<double, 2, 1>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:503:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 2, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:503:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 2, 1>, 1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 2, 1>, 1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 1, 0, 1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 2, 1>, 1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 1, 0, 1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 2, 1>, 1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 2, 1>, 1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Matrix<double, 2, 1>, 1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:91:15:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholder(EssentialPart&, Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) const [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Matrix<double, 2, 1>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:512:3:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:517:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:517:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; Rhs = Eigen::Matrix<double, 1, 1, 0, 1, 1>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:518:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:518:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Block<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:45:18:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholderInPlace(Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:305:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:313:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:313:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>, 3, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:502:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 2, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:502:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>, Eigen::Matrix<double, 2, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>; Rhs = Eigen::Matrix<double, 2, 1>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:503:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 2, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Matrix<double, 2, 1> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:503:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:517:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:517:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>, Eigen::Matrix<double, 1, 1, 0, 1, 1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; Rhs = Eigen::Matrix<double, 1, 1, 0, 1, 1>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:518:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, 1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Matrix<double, 1, 1, 0, 1, 1> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:518:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 1>’
./Eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Matrix<double, -1, -1>; int DeterminantType = -1; typename Eigen::internal::traits<T>::Scalar = double]’
./Eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::internal::traits<T>::Scalar = double]’
./src/Analysis.cpp:598:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h:431:26:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/QSM_tools.cpp:111:22:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Transpose<Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h:431:26:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Matrix<double, -1, -1>, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:594:27:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:443:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar) [with Index = long int; LhsScalar = double; LhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 1>; bool ConjugateLhs = false; RhsScalar = double; RhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 0>; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = double]’:
./Eigen3/Eigen/src/Core/GeneralProduct.h:318:132:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 1, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >; Rhs = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Dest = Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/GeneralProduct.h:191:12:   required from ‘static void Eigen::internal::gemv_dense_selector<1, StorageOrder, BlasCompatible>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; int StorageOrder = 0; bool BlasCompatible = true; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:367:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:349:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; Derived = Eigen::internal::generic_product_impl<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:337:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; Derived = Eigen::internal::generic_product_impl<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:258:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:460:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:461:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 1>’
./Eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Func = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Matrix<double, -1, -1>; int DeterminantType = -1; typename Eigen::internal::traits<T>::Scalar = double]’
./Eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::internal::traits<T>::Scalar = double]’
./src/Analysis.cpp:598:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::div_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::div_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::div_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Matrix<double, -1, -1>; int DeterminantType = -1; typename Eigen::internal::traits<T>::Scalar = double]’
./Eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::internal::traits<T>::Scalar = double]’
./src/Analysis.cpp:598:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Lhs = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >]’
./Eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h:431:26:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:611:64:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:45:18:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholderInPlace(Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:305:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, -1, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:732:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<1, 0, 0, Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:792:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 1; bool SetOpposite = false; DstXprType = Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:840:61:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Triangular>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:555:37:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:470:29:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:245:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:274:10:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:84:5:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholder(EssentialPart&, Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) const [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 3, 1>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:492:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 1, 0, 1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 1, 0, 1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 1, 0, 1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 1, 0, 1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:84:5:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholder(EssentialPart&, Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) const [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Matrix<double, 2, 1>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:512:3:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; ExpressionType = Eigen::Matrix<double, -1, 1>; StorageBase = Eigen::MatrixBase]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:615:21:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Inverse<Eigen::Matrix<double, -1, -1> >]’
./Eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h:431:26:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:798:63:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:45:18:   required from ‘void Eigen::MatrixBase<Derived>::makeHouseholderInPlace(Eigen::MatrixBase<Derived>::Scalar&, Eigen::MatrixBase<Derived>::RealScalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Eigen::MatrixBase<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::RealScalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:305:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:732:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<1, 0, 0, Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:792:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 1; bool SetOpposite = false; DstXprType = Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:840:61:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Triangular>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:555:37:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:470:29:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:245:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:274:10:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<double, -1, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<double, -1, 1>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; ExpressionType = Eigen::Matrix<double, -1, 1>; StorageBase = Eigen::MatrixBase]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:615:21:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:163:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:258:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:443:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar) [with Index = long int; LhsScalar = double; LhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 1>; bool ConjugateLhs = false; RhsScalar = double; RhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 1>; bool ConjugateRhs = false; int Version = 1; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = double]’:
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:145:123:   required from ‘static void Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 1, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 1, Version>::ResScalar*, Index, const ResScalar&) [with Index = long int; int Mode = 6; LhsScalar = double; bool ConjLhs = false; RhsScalar = double; bool ConjRhs = false; int Version = 0; Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 1, Version>::ResScalar = double]’
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:324:12:   required from ‘static void Eigen::internal::trmv_selector<Mode, 1>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >; Rhs = Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >; Dest = Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >; int Mode = 6; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:194:18:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, false, Lhs, true, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; int Mode = 5; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Rhs = const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:709:113:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::TriangularShape, ProductTag>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Rhs = Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>; int ProductTag = 7; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::TriangularShape, ProductTag>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:349:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Rhs = Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>; Derived = Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>, Eigen::DenseShape, Eigen::TriangularShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:337:33:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:460:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:461:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar) [with Index = long int; LhsScalar = double; LhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 1>; bool ConjugateLhs = false; RhsScalar = double; RhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 1>; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 1, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = double]’:
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:154:113:   required from ‘static void Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 1, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 1, Version>::ResScalar*, Index, const ResScalar&) [with Index = long int; int Mode = 6; LhsScalar = double; bool ConjLhs = false; RhsScalar = double; bool ConjRhs = false; int Version = 0; Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 1, Version>::ResScalar = double]’
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:324:12:   required from ‘static void Eigen::internal::trmv_selector<Mode, 1>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false> >; Rhs = Eigen::Transpose<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >; Dest = Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >; int Mode = 6; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:194:18:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, false, Lhs, true, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; int Mode = 5; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Rhs = const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:709:113:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::TriangularShape, ProductTag>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Rhs = Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>; int ProductTag = 7; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::TriangularShape, ProductTag>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:349:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Rhs = Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>; Derived = Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, -1> >, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::TriangularView<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, -1, false>, 5>, Eigen::DenseShape, Eigen::TriangularShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:337:33:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:460:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:461:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Lhs = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]’
./Eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h:452:25:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Matrix<double, -1, -1>; int DeterminantType = -1; typename Eigen::internal::traits<T>::Scalar = double]’
./Eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::internal::traits<T>::Scalar = double]’
./src/Analysis.cpp:598:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:313:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, -1, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:163:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, -1, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; ExpressionType = Eigen::Matrix<double, -1, 1>; StorageBase = Eigen::MatrixBase]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:615:21:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:258:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1>; Src = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/NoAlias.h:42:31:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator=(const StorageBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false>, 0>; ExpressionType = Eigen::Matrix<double, -1, 1>; StorageBase = Eigen::MatrixBase]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:615:21:   required from ‘void Eigen::EigenSolver<_MatrixType>::doComputeEigenvectors() [with _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:447:28:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Matrix<double, -1, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/QSM_tools.cpp:108:34:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:163:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:255:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, 3, 3>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, 3, 3>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:732:7:   required from ‘class Eigen::internal::triangular_dense_assignment_kernel<2, 8, 0, Eigen::internal::evaluator<Eigen::TriangularView<Eigen::Matrix<double, 3, 3>, 10> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:792:10:   required from ‘void Eigen::internal::call_triangular_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with int Mode = 10; bool SetOpposite = false; DstXprType = Eigen::TriangularView<Eigen::Matrix<double, 3, 3>, 10>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:840:61:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Triangular>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::TriangularView<Eigen::Matrix<double, 3, 3>, 10>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::TriangularView<Eigen::Matrix<double, 3, 3>, 10>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/TriangularMatrix.h:555:37:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:258:13:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::evalTo(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:229:30:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 1, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1, 1, -1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1, 1, -1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 1; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:611:64:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1, 1, false> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:126:19:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:313:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, -1, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::sub_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:163:18:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Matrix<double, -1, -1>; int DeterminantType = -1; typename Eigen::internal::traits<T>::Scalar = double]’
./Eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::internal::traits<T>::Scalar = double]’
./src/Analysis.cpp:598:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Src = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/LU/PartialPivLU.h:131:14:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:323:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/PartialPivLU.h:591:10:   required from ‘const Eigen::PartialPivLU<typename Eigen::DenseBase<Derived>::PlainObject> Eigen::MatrixBase<Derived>::partialPivLu() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::DenseBase<Derived>::PlainObject = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/LU/Determinant.h:41:29:   required from ‘static typename Eigen::internal::traits<T>::Scalar Eigen::internal::determinant_impl<Derived, DeterminantType>::run(const Derived&) [with Derived = Eigen::Matrix<double, -1, -1>; int DeterminantType = -1; typename Eigen::internal::traits<T>::Scalar = double]’
./Eigen3/Eigen/src/LU/Determinant.h:96:86:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::determinant() const [with Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::internal::traits<T>::Scalar = double]’
./src/Analysis.cpp:598:39:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 2, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 2, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 2, 1> >, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Matrix<double, 2, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:502:7:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 1, 1, 0, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 1, 0, 1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, 1, 0, 1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >, const Eigen::Matrix<double, 1, 1, 0, 1, 1> >; Derived = Eigen::Matrix<double, 1, 1, 0, 1, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:517:5:   required from ‘void Eigen::RealSchur<_MatrixType>::performFrancisQRStep(Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, Eigen::RealSchur<_MatrixType>::Index, bool, const Vector3s&, Eigen::RealSchur<_MatrixType>::Scalar*) [with _MatrixType = Eigen::Matrix<double, -1, -1>; Eigen::RealSchur<_MatrixType>::Index = long int; Eigen::RealSchur<_MatrixType>::Vector3s = Eigen::Matrix<double, 3, 1>; typename MatrixType::Scalar = double; Eigen::RealSchur<_MatrixType>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:325:29:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, -1, -1> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, -1, -1>; _MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:719:32:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1, 0, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1, 0, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1, 0, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1, 0, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1, 0, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >; Derived = Eigen::Matrix<double, -1, 1, 0, 3, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:129:22:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheLeft(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:313:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, 3, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/Householder.h:166:21:   required from ‘void Eigen::MatrixBase<Derived>::applyHouseholderOnTheRight(const EssentialPart&, const Scalar&, Eigen::MatrixBase<Derived>::Scalar*) [with EssentialPart = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, -1, true>; Eigen::MatrixBase<Derived>::Scalar = double]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:317:5:   required from ‘static void Eigen::HessenbergDecomposition<_MatrixType>::_compute(Eigen::HessenbergDecomposition<_MatrixType>::MatrixType&, Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType&, Eigen::HessenbergDecomposition<_MatrixType>::VectorType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::HessenbergDecomposition<_MatrixType>::CoeffVectorType = Eigen::Matrix<double, 2, 1>; typename _MatrixType::Scalar = double; Eigen::HessenbergDecomposition<_MatrixType>::VectorType = Eigen::Matrix<double, 1, 3>]’
./Eigen3/Eigen/src/Eigenvalues/./HessenbergDecomposition.h:161:15:   required from ‘Eigen::HessenbergDecomposition<_MatrixType>& Eigen::HessenbergDecomposition<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&) [with InputType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, 3, 3> > >; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:259:3:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; Rhs = Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Rhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Product<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >; Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >; Rhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:144:43:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1> >, Eigen::internal::sub_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Functor = Eigen::internal::sub_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >, 1>; Func = Eigen::internal::sub_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:395:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false>, -1, -1, false>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >; Rhs = Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, 3>, 0, Eigen::Stride<0, 0> >]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:172:42:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, -1, 1, false>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 1>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, -1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 1>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 1>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:381:29:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>; Rhs = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h:431:26:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Matrix<double, -1, -1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > > >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Optimizers.cpp:578:45:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:443:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = double; LhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 0>; bool ConjugateLhs = false; RhsScalar = double; RhsMapper = Eigen::internal::const_blas_data_mapper<double, long int, 1>; bool ConjugateRhs = false; int Version = 1; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = double]’:
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:74:123:   required from ‘static void Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 0, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 0, Version>::ResScalar*, Index, const RhsScalar&) [with Index = long int; int Mode = 1; LhsScalar = double; bool ConjLhs = false; RhsScalar = double; bool ConjRhs = false; int Version = 0; Eigen::internal::triangular_matrix_vector_product<Index, Mode, LhsScalar, ConjLhs, RhsScalar, ConjRhs, 0, Version>::ResScalar = double]’
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:265:12:   required from ‘static void Eigen::internal::trmv_selector<Mode, 0>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false> >; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false> >; Dest = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; int Mode = 1; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/products/TriangularMatrixVector.h:194:18:   required from ‘static void Eigen::internal::triangular_product_impl<Mode, false, Lhs, true, Rhs, false>::run(Dest&, const Lhs&, const Rhs&, const typename Dest::Scalar&) [with Dest = Eigen::Matrix<double, 1, -1>; int Mode = 2; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Rhs = Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>; typename Dest::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:709:113:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::TriangularShape, ProductTag>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<double, 1, -1>; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Rhs = Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>, 2>; int ProductTag = 7; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::TriangularShape, ProductTag>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:349:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<double, 1, -1>; Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>; Rhs = Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>, 2>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, 1, -1, true>, 1, -1, false>, Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, -1, -1, 1, -1, -1>, -1, -1, false>, 2>, Eigen::DenseShape, Eigen::TriangularShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = double]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:337:33:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:186:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./Eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:187:39: warning: enum constant in boolean context [-Wint-in-bool-context]
   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 0, 8, 8>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:95:17:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 8, 8, 0, 8, 8>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 8, 8, 0, 8, 8>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 8, 8, 0, 8, 8>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 8, 8, 0, 8, 8>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 0, 8, 8> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:95:17:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 3, 3>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 3, 3>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Diagonal<Eigen::Matrix<double, 8, 8, 1, 8, 8>, 0>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 1, 0, 8, 1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:91:78:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 1, -1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 1, -1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 1, -1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, 1, -1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, 1, -1> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, 8, 8, 1, 8, 8> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, 8, 8, 1, 8, 8> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 8, 8, 1, 8, 8>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, 8, 8, 1, 8, 8>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 8, 8, 1, 8, 8>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<double, 8, 8, 1, 8, 8>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 8, 8, 1, 8, 8> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:91:78:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, 1, -1> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, -1>, 0, Eigen::OuterStride<> >, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:18:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, 1, -1> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<double, 1, -1> > >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; SrcXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Transpose<Eigen::Matrix<double, 1, -1> >; Src = Eigen::Map<Eigen::Matrix<double, -1, 1>, 2, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Householder/BlockHouseholder.h:85:55:   required from ‘void Eigen::internal::apply_block_householder_on_the_left(MatrixType&, const VectorsType&, const CoeffsType&, bool) [with MatrixType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; VectorsType = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, false>; CoeffsType = Eigen::VectorBlock<const Eigen::Matrix<double, -1, 1>, -1>]’
./Eigen3/Eigen/src/Householder/HouseholderSequence.h:333:46:   required from ‘void Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>::applyThisOnTheLeft(Dest&, Workspace&) const [with Dest = Eigen::Matrix<double, -1, -1>; Workspace = Eigen::Matrix<double, 1, -1>; VectorsType = Eigen::Matrix<double, -1, -1>; CoeffsType = Eigen::Matrix<double, -1, 1>; int Side = 1]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:233:9:   required from ‘bool Eigen::internal::qr_preconditioner_impl<MatrixType, 2, 0, true>::run(Eigen::JacobiSVD<MatrixType, 2>&, const MatrixType&) [with MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:680:5:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>& Eigen::JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/SVD/JacobiSVD.h:544:14:   required from ‘Eigen::JacobiSVD<MatrixType, QRPreconditioner>::JacobiSVD(const MatrixType&, unsigned int) [with _MatrixType = Eigen::Matrix<double, -1, -1>; int QRPreconditioner = 2; Eigen::JacobiSVD<MatrixType, QRPreconditioner>::MatrixType = Eigen::Matrix<double, -1, -1>]’
./src/Analysis.cpp:596:61:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Transpose<const Eigen::Transpose<const Eigen::Matrix<double, -1, 1> > >; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/ProductEvaluators.h:239:23:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 1, 1, 0, 1, 1>; Lhs = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:124:75:   required from ‘Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Rhs>::Scalar = double; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, Option>::Lhs>::Scalar = double; Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::XprType = Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
./Eigen3/Eigen/src/Core/ProductEvaluators.h:35:70:   required from ‘Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Options = 0; Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::XprType = Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>]’
./Eigen3/Eigen/src/Core/Product.h:132:22:   required from ‘Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::operator const Scalar() const [with Lhs = Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, -1>, 0>; Rhs = Eigen::Matrix<double, -1, 1>; int Option = 0; Eigen::internal::dense_product_base<Lhs, Rhs, Option, 6>::Scalar = double]’
./Eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:69:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::scalar_quotient_op<typename Eigen::internal::traits<T>::Scalar, T> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::scalar_quotient_op<typename Eigen::internal::traits<T>::Scalar, T> > >::value>::type>::type> >::type Eigen::MatrixBase<Derived>::operator/(const T&) const [with T = Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Matrix<double, -1, 1>, 0>; Derived = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::scalar_quotient_op<typename Eigen::internal::traits<T>::Scalar, T> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::scalar_quotient_op<typename Eigen::internal::traits<T>::Scalar, T> > >::value>::type>::type> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, 1>, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 0>, Eigen::Matrix<double, -1, -1>, 0>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >]’
./src/Optimizers.cpp:578:44:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1, 0, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1, 0, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1, 0, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1, 0, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1, 0, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, 3, 1>, 0, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1, 0, 3, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1, 0, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> > >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, 1, 0, 3, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> > >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1, 0, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<double, -1, 1, 0, 3, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, -1, 1, 0, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:721:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, 3, 1> >, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, -1, 1, false> >; Derived = Eigen::Matrix<double, -1, 1, 0, 3, 1>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:804:7:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/PlainObjectBase.h:564:22:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; Derived = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Core/Matrix.h:238:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:276:12:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::computeFromHessenberg(const HessMatrixType&, const OrthMatrixType&, bool) [with HessMatrixType = Eigen::internal::HessenbergDecompositionMatrixHReturnType<Eigen::Matrix<double, 3, 3> >; OrthMatrixType = Eigen::HouseholderSequence<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 2, 1>, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/RealSchur.h:262:24:   required from ‘Eigen::RealSchur<MatrixType>& Eigen::RealSchur<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./Eigen3/Eigen/src/Eigenvalues/EigenSolver.h:389:3:   required from ‘Eigen::EigenSolver<MatrixType>& Eigen::EigenSolver<_MatrixType>::compute(const Eigen::EigenBase<OtherDerived>&, bool) [with InputType = Eigen::Matrix<double, 3, 3>; _MatrixType = Eigen::Matrix<double, 3, 3>]’
./src/Multipoles.cpp:1377:24:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::swap_assign_op<double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 1>’
./Eigen3/Eigen/src/Core/Swap.h:19:7:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::swap_assign_op<double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; SrcXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Functor = Eigen::internal::swap_assign_op<double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Func = Eigen::internal::swap_assign_op<double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   [ skipping 35 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:798:63:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, Eigen::internal::assign_op<double, double> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false> >, Eigen::internal::assign_op<double, double>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Functor = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; SrcXprType = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Functor = Eigen::internal::assign_op<double, double>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Func = Eigen::internal::assign_op<double, double>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, -1, false>; Src = Eigen::Block<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, 1, -1, false>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 35 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:798:63:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<bool, -1, 1, 0, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> > >, Eigen::internal::assign_op<bool, bool> >’:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<bool, -1, 1, 0, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> > >, Eigen::internal::assign_op<bool, bool>, 0>’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:711:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(const DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<bool, -1, 1, 0, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Functor = Eigen::internal::assign_op<bool, bool>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:862:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<bool, -1, 1, 0, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Functor = Eigen::internal::assign_op<bool, bool>; Weak = void]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:813:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<bool, -1, 1, 0, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Func = Eigen::internal::assign_op<bool, bool>]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:776:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<bool, -1, 1, 0, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, -1, 1, 0, -1, 1> >; Func = Eigen::internal::assign_op<bool, bool>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   [ skipping 38 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./Eigen3/Eigen/src/Core/Matrix.h:296:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:768:41:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./Eigen3/Eigen/src/Core/AssignEvaluator.h:754:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, -1, -1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>]’
./Eigen3/Eigen/src/Core/PlainObjectBase.h:703:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; Derived = Eigen::Matrix<double, -1, -1>]’
./Eigen3/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1>, 0>, Eigen::Inverse<Eigen::Matrix<double, -1, -1> >, 0>; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
./src/Analysis.cpp:798:63:   required from here
./Eigen3/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from ./Eigen3/Eigen/Core:389:0,
                 from ./include/LICHEM_matrix.h:22,
                 from ./include/LICHEM_headers.h:26,
                 from ./src/LICHEM.cpp:22:
./Eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./include/LICHEM_QSM.h:123:0,
                 from ./include/LICHEM_headers.h:247,
                 from ./src/LICHEM.cpp:22:
./src/Optimization_tools.cpp: In function ‘double runMMopt(std::vector<QMMMAtom>&, QMMMSettings&, std::fstream&)’:
./src/Optimization_tools.cpp:365:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
./src/Optimization_tools.cpp: In function ‘double runRestrMMopt(std::vector<QMMMAtom>&, QMMMSettings&, double, std::fstream&)’:
./src/Optimization_tools.cpp:404:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
